{"id":"index.html","dependencies":[{"name":"./main.js","dynamic":true,"resolved":"/Users/sjoerdvermeijden/Sites/youtube/main.js","parent":"/Users/sjoerdvermeijden/Sites/youtube/index.html"},{"name":"/Users/sjoerdvermeijden/Sites/youtube/package.json","includedInParent":true,"mtime":1590149462109}],"generated":{"html":"<!DOCTYPE html>\n<html>\n  <body>\n\n    <div class=\"site\">\n\n\t\t<header class=\"header\"></header>\n\n\t\t<main class=\"main\">\n\n\t\t\t<sidebar class=\"sidebar\"></sidebar>\n\n\t\t\t<div class=\"content\">\n\n\t\t\t<div id=\"player\" class=\"player\"></div>\n\t\t\t\n\t\t\t</div>\n\n\t\t</main>\n\n\t\t<footer class=\"footer\">\n\n\t\t\t<div class=\"footer__main-controls\">\n\n\t\t\t\t<div class=\"footer__controls\">\n\n\t\t\t\t\t<a href=\"#\" class=\"footer__control-item footer__control-item--previous js-previous\"></a>\n\t\t\t\t\t\n\t\t\t\t\t<a href=\"#\" class=\"footer__control-item footer__control-item--play js-play\"></a>\n\t\t\t\t\t\n\t\t\t\t\t<a href=\"#\" class=\"footer__control-item footer__control-item--next js-next\"></a>\n\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"footer__progress\"></div>\n\n\t\t\t</div>\n\n\t\t\t<div class=\"footer__volume\"></div>\n\n\t\t</footer>\n\n    </div>\n\n    <script>// 2. This code loads the IFrame Player API code asynchronously.\nvar tag = document.createElement('script');\ntag.src = \"https://www.youtube.com/iframe_api\";\nvar firstScriptTag = document.getElementsByTagName('script')[0];\nfirstScriptTag.parentNode.insertBefore(tag, firstScriptTag); // 3. This function creates an <iframe> (and YouTube player)\n//    after the API code downloads.\n\nvar player;\n\nfunction onYouTubeIframeAPIReady() {\n  player = new YT.Player('player', {\n    height: '427',\n    width: '700',\n    videoId: 'ktuYktRmjWQ',\n    playerVars: {\n      'autoplay': 1,\n      'controls': 0\n    },\n    events: {\n      'onReady': onPlayerReady,\n      'onStateChange': onPlayerStateChange\n    }\n  });\n} // 4. The API will call this function when the video player is ready.\n\n\nfunction onPlayerReady(event) {\n  event.target.playVideo();\n} // 5. The API calls this function when the player's state changes.\n//    The function indicates that when playing a video (state=1),\n//    the player should play for six seconds and then stop.\n\n\nvar done = false;\n\nfunction onPlayerStateChange(event) {\n  if (event.data == YT.PlayerState.PLAYING && !done) {\n    setTimeout(stopVideo, 6000);\n    done = true;\n  }\n}\n\nvar stopButton = document.querySelector('.js-play');\nvar nextButton = document.querySelector('.js-next');\nvar previousButton = document.querySelector('.js-previous');\nstopButton.addEventListener('click', function (e) {\n  stopButton.classList.toggle('is-paused');\n\n  if (stopButton.classList.contains('is-paused')) {\n    player.playVideo();\n  } else {\n    player.pauseVideo();\n  }\n});\nnextButton.addEventListener('click', function () {});\npreviousButton.addEventListener('click', function () {});</script>\n\n    <script src=\"/7a9076d6d94e62c13d641aa71f19ae8e.js\"></script>\n    \n  </body>\n</html>"},"sourceMaps":null,"error":null,"hash":"c1f95d818f782de68effe4cb4557cc58","cacheData":{"env":{}}}